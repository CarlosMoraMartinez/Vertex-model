# dpygrad_mode307_0
>t1_active #
1
>t1_inwards_active #
-1
>t1_outwards_active #
-1
>division_active #
1
>t2_active #
-1
>join_edges_active #
-1
>control_cells_2sides #
1
>check_if_edges_cross_opt #
0
>number_of_accepted_movements #this overwrites line command argument if > 0
600000000
>write_Every_N #overwrites line command if > 0
100000000
>upper_bound #
200000000
>Integration_mode #0 = MonteCarlo, 1=Euler
0
>min_range_vertex_movement #
0.0
>max_range_vertex_movement (0.01) #In Euler, if positive, derivatives are set to this value when they are bigger than it
0.1
>h #When using Euler/Runge-Kutta integration
0.01
>temperature_positive_energy #Noise added if Euler integration (if >0), temperature when E1 > E0 if Monte Carlo integration
0.05
>temperature_negative_energy #
2.0
>temperature_means_proportion_of_acceptance #If true, unfavourable movements are rejected with negative_energy probability, independently of their energy increase (makes things easier to control)
1
>ENERGY_TERM1 #(Area)
0.1,0.5,1,5,10
>ENERGY_TERM2 #(Tension)
0.1,0.5,1,5,10
>ENERGY_TERM3 #(Perimeter)
1
>t1_transition_critical_distance #
0.2
>length_rotated_edge #
0.21
>t2_transition_critical_area #
0.2
>max_edge_length #
10
>AUTONOMOUS_CELL_CYCLE #
1
>start_cell_cycle_at_random #
1
>CELL_CYCLE_CONTROLS_SIZE #
-1
>keep_blade_area_after_division #Overrides all other size controls in BLADE
1
>TIME_CONTROLS_SIZE #(can't be true if CELL_CYCLE_CONTROLS_SIZE is true; is overriden)
-1
>time_decrease_exponent #(at each move, a cell proportion of (final size - starting size) is multiplied by exp(-(x**THIS_PARAM))), where x is current_move/final_moves
0.2
>coord_controls_size #>=0: no; 1=x only; 2=y only; 3=both; 4=modify the upper_bound parameter in proportion to x coord in hinge
-1
>use_blade_area_for_coord_gradient #Old mode (yes) == 1; if -1, use the parameter preferred_area_initial_gradient instead
1
>xcoord_decrease_exponent #
10
>use_K_spatial_gradient #<=0: no; 1=x only; 2=y only; 3=both
0
>K_change_exponent
2
>>K #
0:0.00111111
1:0.00111111
2:0.00111111
3:0.00111111
<

>>K_final #
0:0.00111111
1:0.04
2:0.00111111
3:0.04
<

>>line_tension #tension
0:-0.1,-0.02,0.001,0.02,0.1
1:-0.1,-0.02,0.001,0.02,0.1
2:-0.1,-0.02,0.001,0.02,0.1
3:-0.1,-0.02,0.001,0.02,0.1
<

>>line_tension_border #
0:50,25,5
1:50,25,5
2:50,25,5
3:50,25,5
<

>perimeter_contract_temporal_gradient ## <=0: no; 1=x only; 2=y only; 3=both
-1
>perimeter_contract_spatial_gradient ## <=0: no; 1=x only; 2=y only; 3=both
1
>>perimeter_contract #
0:0.001
1:0.001
2:0.001
3:0.001
<

>>perimeter_contract_final #
0:1.5
1:1.5
2:1.5
3:1.5
<

>>preferred_area_initial #
0:30.0
1:30.0
2:30.0
3:30.0
<

>>preferred_area_initial_gradient #
0:20.0
1:20.0
2:20.0
3:20.0
<

>>preferred_area_final #
0:30
1:30
2:30
3:30
<

>>division_angle_random_noise #
0:0.0
1:0.0
2:0.0
3:0.0
<

>>division_angle_longest_axis #
0:1.0
1:1.0
2:1.0
3:1.0
<

>>division_angle_external #
0:0.0
1:0.0
2:0.0
3:0.0
<

>>division_angle_external_degrees #
0:90.0
1:90.0
2:90.0
3:90.0
<

>>spring_type_tension #
0:10.0
1:10.0
2:10.0
3:10.0
<

>>max_cell_area #
0:30.0
1:30.0
2:30.0
3:30.0
<

>>cell_cycle_limit #
0:100000
1:100000
2:100000
3:100000
<

>>vary_line_tension #if > 0, use parameters below, else use the model as it was (fixed tension for each cell type) (coerced to double because it is celltypeparam)
0:-1.0
1:-1.0
2:-1.0
3:-1.0
<

>vary_edge_tension_with_time # if <0: vary prop_max_angle, the rest prop_uniform; if 1: use edge_temporal_angle_efect_max and min
-1
>vary_edge_tension_time_exponent ##If negative, angle influence on tension goes from edge_temporal_angle_efect_max to min
1.0
>>edge_angle_prop_external #overriden if vary_edge_tension_with_time
0:0.0
1:0.0
2:0.0
3:0.0
<

>>edge_angle_prop_uniform #overriden if vary_edge_tension_with_time
0:1.0
1:0.0
2:1.0
3:0.0
<

>>edge_angle_prop_maxangle #overriden if vary_edge_tension_with_time
0:0.0
1:1.0
2:0.0
3:1.0
<

>>edge_angle_prop_random #
0:0.0
1:0.0
2:0.0
3:0.0
<

>>edge_tension_external #overriden if vary_edge_tension_with_time
0:0.0
1:0.0
2:0.0
3:0.0
<

>>edge_maxangle #
0:0.0
1:0.0
2:0.0
3:0.0
<

>>edge_spatialmax_tension #
0:0.1
1:0.1
2:0.1
3:0.1
<

>>edge_spatialmin_tension #
0:-0.2
1:-0.2
2:-0.2
3:-0.2
<

>>edge_temporal_angle_efect_max #between 0 and 1
0:0.0
1:1.0
2:0.0
3:1.0
<

>>edge_temporal_angle_efect_min #between 0 and 1
0:0.0
1:0.0
2:0.0
3:0.0
<

>>spring_type_xlength_proportion # This is used to go from expansion to hinge contraction
0:0.6
1:0.7
2:0.8
3:0.9
<

>add_static_to_hinge #In the superior border of hinge, which proportion of P-D length set to static. To go from exp. to hinge contraction
0.6
>spring_tension_mode # 0: from parameter spring_tension; 1: A-P compartments; 2 P-D gradient; 3: A-P compartment and P-D gradient; 4: different gradients for A and P
0
>posterior_comparment_region  #If spring_tension_mode = 1 or 3, used to define the posterior compartment (by y <= this param*height)
0.5
>posterior_compartment_factor #If spring_tension_mode = 1 or 3, multiply posterior tension by this number
0.5
>spring_gradient_min_tension #
0.75
>spring_gradient_max_tension #
5
>spring_gradient_exponent #
5
>spring_gradient_min_tension_P # If spring_tension_mode == 4, for posterior compartment gradient
0.1
>spring_gradient_max_tension_P # If spring_tension_mode == 4, for posterior compartment gradient
4.0
>spring_gradient_exponent_P # If spring_tension_mode == 4, for posterior compartment gradient
5
>mode_to_order_springs_PD #If 1, use x position to determine tension. If 2, use vertex order
1
>include_hinge_in_spring_gradient
1
>active_t1_prob
-1
>min_angle_for_active_t1
45
>max_angle_for_active_t1
90
>hinge_blade_interface_tension
0.01
>line_tension_interstatic
-0.1
>use_term_4
-1
>>ENERGY_TERM4_anterior #(rigidity)
0:0.6
1:0.6
2:0.6
3:0.6
<

>>ENERGY_TERM4_posterior #(rigidity)
0:0.01
1:0.01
2:0.01
3:0.01
<

>string_edge_tension
800
>string_edge_tension_posterior_compartment_proportion
0.001
>string_edge_tension_min
1.0
>string_tension_exponent
1
>string_anterior_gradient
-1,1
>string_posterior_gradient
-1
>set_string_tension_hinge #boolean
-1
>string_tension_hinge #tension value
800
>string_distal_transition_tension
2000
>string_distal_transition_lengthProportion
0.05
>reference_for_gradient #1=frontier hinge-blade; 2=max hinge position; 3=proportion of wing
4
>wing_proportion_in_gradient
0.52
>random_seed
1234
